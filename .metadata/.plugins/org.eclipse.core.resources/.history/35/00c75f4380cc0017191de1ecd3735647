package edu.demon.Object6;

import sun.management.resources.agent;

class Father {
	int age = 40;
	void speak() {
		System.out.println("I am father");
	}
	static void sing() {
		System.out.println("Father sing");
	}
	void shout() {
		System.out.println("Father angry");
		speak();
	}
}
class Son extends Father {
	int age = 20;
	void speak() {
		System.out.println("I am son");
	}
	static void sing() {
		System.out.println("Son sing");
	}
	void shout(String str) {
		System.out.println("Father angry" + str);
	}
}
public class RuntimePolymorphic {

	public static void main(String[] args) {
		Father father = new Son();
		father.speak();
		// 父类中属性只能被隐藏，而不能被覆盖；
		// 而对于方法来说，方法隐藏只有一种形式，就是父类和子类存在相同的静态方法。
		father.sing();
		System.out.println("I am " + father.age + " years old!");
		father.shout();
	}
}
